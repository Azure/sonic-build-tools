pipeline {
    agent { node { label 'jenkins-kvm-workers' } }

    options {
        buildDiscarder(logRotator(artifactDaysToKeepStr: '', artifactNumToKeepStr: '', daysToKeepStr: '', numToKeepStr: '60'))

    }

    stages {
        stage('Prepare') {
            steps {
                step([$class: 'WsCleanup'])
                checkout([$class: 'GitSCM', 
                          branches: [[name: '${sha1}']],
                          extensions: [[$class: 'SubmoduleOption',
                                        disableSubmodules: false,
                                        parentCredentials: false,
                                        recursiveSubmodules: true,
                                        reference: '',
                                        trackingSubmodules: false]],
                          userRemoteConfigs: [[url: 'http://github.com/Azure/sonic-buildimage',
                                               refspec: '+refs/pull/*:refs/remotes/origin/pr/*']]])
            }
        }

        stage('Build') {
            steps {
                sh '''#!/bin/bash -xe

git submodule foreach --recursive '[ -f .git ] && echo "gitdir: $(realpath --relative-to=. $(cut -d" " -f2 .git))" > .git'

make configure PLATFORM=vs

sudo bash -c "echo 1 > /proc/sys/vm/compact_memory"

make SONIC_CONFIG_BUILD_JOBS=1 target/sonic-vs.img.gz
'''
            }
        }

    }
    post {

        success {
            archiveArtifacts(artifacts: 'target/**')
        }
        cleanup {
            cleanWs(disableDeferredWipeout: false, deleteDirs: true, notFailBuild: true)
        }
    }
}
