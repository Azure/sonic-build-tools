pipeline {
    agent { node { label 'jenkins-workers' } }

    stages {
        stage('Prepare') {
            steps {
                step([$class: 'WsCleanup'])
                checkout([$class: 'GitSCM', 
                          branches: [[name: '${sha1}']], 
                          extensions: [[$class: 'SubmoduleOption',
                                        disableSubmodules: false,
                                        parentCredentials: false,
                                        recursiveSubmodules: true,
                                        reference: '',
                                        trackingSubmodules: false]],
                          userRemoteConfigs: [[url: 'http://github.com/Azure/sonic-buildimage',
                                               refspec: '+refs/pull/*:refs/remotes/origin/pr/*']]])

                copyArtifacts(projectName: 'common/dep-build', filter: 'target/debs/stretch/*.deb', target: 'target/debs/stretch/', flatten: false)
            }
        }

        stage('Build') {
            steps {
                sh '''
#!/bin/bash -xe

git submodule foreach --recursive '[ -f .git ] && echo "gitdir: $(realpath --relative-to=. $(cut -d" " -f2 .git))" > .git'

make configure PLATFORM=mellanox
touch target/debs/stretch/*.deb
make SONIC_CONFIG_BUILD_JOBS=1 all
'''
            }
        }

    }
    post {

        success {
            archiveArtifacts(artifacts: 'target/**')
            cleanWs(disableDeferredWipeout: false, deleteDirs: true, notFailBuild: true)
        }
        fixed {
            slackSend(color:'#00FF00', message: "Build job back to normal: ${env.JOB_NAME} ${env.BUILD_NUMBER} (<${env.BUILD_URL}|Open>)")
        }
        regression {
            slackSend(color:'#FF0000', message: "Build job Regression: ${env.JOB_NAME} ${env.BUILD_NUMBER} (<${env.BUILD_URL}|Open>)")
        }
    }
}
