pipeline {
    agent { node { label 'sonic-slave-buster' } }

    options {
        buildDiscarder(logRotator(artifactDaysToKeepStr: '', artifactNumToKeepStr: '', daysToKeepStr: '', numToKeepStr: '10'))
    }

    environment {
        SONIC_TEAM_WEBHOOK = credentials('public-jenkins-builder')
    }

    triggers {
        pollSCM('H/10 * * * *')
    }

    stages {
        stage('Prepare') {
            steps {
                dir('sonic-mgmt-framework') {
                    checkout([$class: 'GitSCM',
                          branches: [[name: 'refs/heads/master']],
                          userRemoteConfigs: [[url: 'http://github.com/Azure/sonic-mgmt-framework']]])
                }
                copyArtifacts(projectName: '../vs/buildimage-vs-image', filter: '**/*.deb', target: 'buildimage', flatten: false)
            }
        }

        stage('Build') {
            steps {
                sh './scripts/common/sonic-mgmt-framework-build/build.sh'
            }
        }
    }
    post {
        success {
            archiveArtifacts(artifacts: 'target/*.deb')
        }
        fixed {
            slackSend(color:'#00FF00', message: "Build job back to normal: ${env.JOB_NAME} ${env.BUILD_NUMBER} (<${env.BUILD_URL}|Open>)")
            office365ConnectorSend(webhookUrl: "${env.SONIC_TEAM_WEBHOOK}")
        }
        regression {
            slackSend(color:'#FF0000', message: "Build job Regression: ${env.JOB_NAME} ${env.BUILD_NUMBER} (<${env.BUILD_URL}|Open>)")
            office365ConnectorSend(webhookUrl: "${env.SONIC_TEAM_WEBHOOK}")
        }
    }
}
