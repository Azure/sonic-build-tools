pipeline {
    agent { node { label 'sonic-slave' } }

    stages {
        stage('Prepare') {
            steps {
                checkout([$class: 'GitSCM', 
                          branches: [[name: 'refs/heads/master']], 
                          extensions: [[$class: 'SubmoduleOption',
                                        disableSubmodules: false,
                                        parentCredentials: false,
                                        recursiveSubmodules: false,
                                        reference: '',
                                        trackingSubmodules: false]],
                          userRemoteConfigs: [[url: 'http://github.com/Azure/sonic-telemetry']]])
                copyArtifacts(projectName: 'vs/buildimage-vs-all', filter: '**/*.deb', target: 'buildimage', flatten: false)
 
            }
        }

        stage('Build') {
            steps {
                sh '''
#!/bin/bash -x

# Install REDIS
sudo dpkg -i buildimage/target/debs/stretch/redis-tools_*.deb
sudo dpkg -i buildimage/target/debs/stretch/redis-server_*.deb
sudo sed -i 's/notify-keyspace-events ""/notify-keyspace-events AKE/' /etc/redis/redis.conf
sudo service redis-server start

dpkg-buildpackage -rfakeroot -b -us -uc

mkdir target
cp ../*.deb target/
'''
            }
        }
    }
    post {

        success {
            archiveArtifacts(artifacts: 'target/*.deb')
        }
        fixed {
            slackSend(color:'#00FF00', message: "Build job back to normal: ${env.JOB_NAME} ${env.BUILD_NUMBER} (<${env.BUILD_URL}|Open>)")
        }
        regression {
            slackSend(color:'#FF0000', message: "Build job Regression: ${env.JOB_NAME} ${env.BUILD_NUMBER} (<${env.BUILD_URL}|Open>)")
        }
    }
}
