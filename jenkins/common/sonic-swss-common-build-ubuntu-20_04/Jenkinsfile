pipeline {
    agent { dockerfile { filename 'jenkins/common/sonic-swss-common-build-ubuntu-20_04/Dockerfile' } }

    options {
        buildDiscarder(logRotator(artifactDaysToKeepStr: '', artifactNumToKeepStr: '', daysToKeepStr: '', numToKeepStr: '10'))
    }

    environment {
        SONIC_TEAM_WEBHOOK = credentials('public-jenkins-builder')
    }

    triggers {
        pollSCM('H/10 * * * *')
    }

    stages {
        stage('Prepare') {
            steps {
                dir('sonic-swss-common') {
                    checkout([$class: 'GitSCM',
                              branches: [[name: 'refs/heads/master']],
                              userRemoteConfigs: [[url: 'http://github.com/Azure/sonic-swss-common']]])
                }
            }
        }

        stage('Build') {
            steps {
                sh '''#!/bin/bash -ex

cd sonic-swss-common

dpkg-buildpackage -us -uc -b

cd ../

mkdir -p target
cp *.deb target/
'''
            }
        }

    }

    post {

        success {
            archiveArtifacts(artifacts: 'target/*.deb')
        }
        fixed {
            slackSend(color:'#00FF00', message: "Build job back to normal: ${env.JOB_NAME} ${env.BUILD_NUMBER} (<${env.BUILD_URL}|Open>)")
            office365ConnectorSend(webhookUrl: "${env.SONIC_TEAM_WEBHOOK}")
        }
        regression {
            slackSend(color:'#FF0000', message: "Build job Regression: ${env.JOB_NAME} ${env.BUILD_NUMBER} (<${env.BUILD_URL}|Open>)")
            office365ConnectorSend(webhookUrl: "${env.SONIC_TEAM_WEBHOOK}")
        }
    }
}
